CREATE TABLE assignments (
id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
stage_id UUID NOT NULL, -- ID của giai đoạn mà nhiệm vụ này thuộc về
assigned_to UUID NOT NULL, -- ID của GIAOVIEN được phân công
assignment_details TEXT, -- Mô tả chi tiết nhiệm vụ cụ thể cho giáo viên
status VARCHAR(50) DEFAULT 'pending' NOT NULL, -- Trạng thái của nhiệm vụ: 'pending', 'in_progress', 'completed', 'cancelled'
assigned_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, -- Thời gian phân công
completed_at TIMESTAMP WITH TIME ZONE, -- Thời gian nhiệm vụ được đánh dấu hoàn thành
CONSTRAINT fk_assignment_stage_id FOREIGN KEY (stage_id) REFERENCES enrollment_stages(id) ON DELETE CASCADE, -- Nếu giai đoạn bị xóa, phân công cũng bị xóa
CONSTRAINT fk_assignment_assigned_to FOREIGN KEY (assigned_to) REFERENCES users(id) ON DELETE RESTRICT -- Đảm bảo giáo viên được phân công tồn tại
);

-- Bảng NOTIFICATIONS (Thông báo)
-- Thông báo chung do TRUONGBAN tạo, GIAOVIEN có thể xem
CREATE TABLE notifications (
id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
title VARCHAR(255) NOT NULL, -- Tiêu đề của thông báo
content TEXT NOT NULL, -- Nội dung chi tiết của thông báo
created_by UUID NOT NULL, -- ID của TRUONGBAN đã tạo thông báo
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT fk_notification_created_by FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE RESTRICT
);

-- Bảng USER_NOTIFICATIONS (Trạng thái Thông báo của Người dùng)
-- Lưu trữ trạng thái đã đọc của thông báo cho từng người dùng (Tùy chọn: nếu cần chức năng "đã đọc")
CREATE TABLE user_notifications (
user_id UUID NOT NULL, -- ID của người dùng
notification_id UUID NOT NULL, -- ID của thông báo
is_read BOOLEAN DEFAULT FALSE, -- TRUE nếu đã đọc, FALSE nếu chưa
read_at TIMESTAMP WITH TIME ZONE, -- Thời gian đọc
PRIMARY KEY (user_id, notification_id), -- Khóa chính kép (người dùng và thông báo)
CONSTRAINT fk_user_notification_user_id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
CONSTRAINT fk_user_notification_notification_id FOREIGN KEY (notification_id) REFERENCES notifications(id) ON DELETE CASCADE
);

-- Bảng REPORTS (Báo cáo)
-- Báo cáo công việc từ GIAOVIEN về nhiệm vụ được phân công, TRUONGBAN duyệt
CREATE TABLE reports (
id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
assignment_id UUID NOT NULL, -- ID của nhiệm vụ mà báo cáo này liên quan
reported_by UUID NOT NULL, -- ID của GIAOVIEN đã gửi báo cáo
report_content TEXT NOT NULL, -- Nội dung chi tiết của báo cáo
has_documents BOOLEAN DEFAULT FALSE,
submitted_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, -- Thời gian gửi báo cáo
status VARCHAR(50) DEFAULT 'submitted' NOT NULL, -- Trạng thái báo cáo: 'submitted', 'reviewed', 'rejected'
reviewed_by UUID, -- ID của TRUONGBAN đã duyệt báo cáo (có thể NULL nếu chưa duyệt)
reviewed_at TIMESTAMP WITH TIME ZONE, -- Thời gian báo cáo được duyệt
review_comments TEXT, -- Bình luận của TRUONGBAN khi duyệt/từ chối
CONSTRAINT fk_report_assignment_id FOREIGN KEY (assignment_id) REFERENCES assignments(id) ON DELETE RESTRICT,
CONSTRAINT fk_report_reported_by FOREIGN KEY (reported_by) REFERENCES users(id) ON DELETE RESTRICT,
CONSTRAINT fk_report_reviewed_by FOREIGN KEY (reviewed_by) REFERENCES users(id) ON DELETE SET NULL -- Nếu TRUONGBAN duyệt bị xóa, trường này thành NULL
);

CREATE TABLE report_documents (
report_id UUID NOT NULL, -- ID của báo cáo
document_id UUID NOT NULL, -- ID của tài liệu
PRIMARY KEY (report_id, document_id), -- Khóa chính kép
CONSTRAINT fk_rd_report_id FOREIGN KEY (report_id) REFERENCES reports(id) ON DELETE CASCADE, -- Nếu báo cáo bị xóa, liên kết này cũng bị xóa
CONSTRAINT fk_rd_document_id FOREIGN KEY (document_id) REFERENCES documents(id) ON DELETE RESTRICT -- Nếu tài liệu bị xóa (không nên xảy ra khi đang liên kết), hãy hạn chế
);

-- Bảng DOCUMENTS (Tài liệu)
-- Lưu trữ thông tin về các tài liệu, TRUONGBAN truy xuất/quản lý
CREATE TABLE documents (
id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
document_name VARCHAR(255) NOT NULL, -- Tên của tài liệu
file_path TEXT NOT NULL, -- Đường dẫn lưu trữ thực tế của file (ví dụ: trên cloud storage hoặc hệ thống cục bộ)
file_type VARCHAR(50), -- Loại file (ví dụ: 'pdf', 'docx', 'xlsx')
file_size_kb INTEGER, -- Kích thước file tính bằng KB
uploaded_by UUID NOT NULL, -- ID của người đã tải lên (thường là TRUONGBAN)
uploaded_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT fk_document_uploaded_by FOREIGN KEY (uploaded_by) REFERENCES users(id) ON DELETE RESTRICT
);

-- Bảng CHAT_MESSAGES (Tin nhắn Chat)
-- Lưu trữ tin nhắn trong nhóm chat nội bộ
CREATE TABLE chat_messages (
id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
sender_id UUID NOT NULL, -- ID của người gửi tin nhắn
message_content TEXT NOT NULL, -- Nội dung tin nhắn
sent_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, -- Thời gian gửi tin nhắn
CONSTRAINT fk_chat_sender_id FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE RESTRICT
);

-- Các TRIGGER để tự động cập nhật cột 'updated_at'
-- Hàm này sẽ tự động cập nhật thời gian 'updated_at' mỗi khi có sự thay đổi trên một hàng
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
NEW.updated_at = NOW(); -- Cập nhật cột updated_at của hàng mới/được cập nhật thành thời gian hiện tại
RETURN NEW;
END;
$$ language 'plpgsql';

-- Áp dụng trigger cho bảng 'users'
CREATE TRIGGER update_users_updated_at
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Áp dụng trigger cho bảng 'enrollment_plans'
CREATE TRIGGER update_enrollment_plans_updated_at
BEFORE UPDATE ON enrollment_plans
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Áp dụng trigger cho bảng 'enrollment_stages'
CREATE TRIGGER update_enrollment_stages_updated_at
BEFORE UPDATE ON enrollment_stages
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();